name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: make application-db.yml
      run: |
        cd ./src/main/resources
        touch ./application-db.yml
        echo "${{ secrets.DATABASE }}" >> ./application-db.yml
        cat ./application-db.yml
      shell: bash

    - name: make application-oauth.yml
      run: |
        cd ./src/main/resources
        touch ./application-oauth.yml
        echo "${{ secrets.OAUTH }}" >> ./application-oauth.yml
        cat ./application-oauth.yml
      shell: bash

    - name: make application-server.yml
      run: |
        cd ./src/main/resources
        touch ./application-server.yml
        echo "${{ secrets.SERVER }}" >> ./application-server.yml
        cat ./application-server.yml
      shell: bash

    - name: Build with Gradle
      run: |
        sudo chmod +x ./gradlew
        ./gradlew wrap
        ./gradlew bootJar

    - name: docker login
      run: docker login -u ${{ secrets.DOCKER_ID }} -p ${{ secrets.DOCKER_PASSWORD }}

    - name: docker image build
      run: docker build -t ${{ secrets.DOCKER_ID }}/damo-backend .

    - name: docker push
      run: docker push ${{ secrets.DOCKER_ID }}/damo-backend

    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ubuntu
        key: ${{ secrets.KEY }}
        script: |
          sudo docker-compose down
          sudo docker pull ${{ secrets.DOCKER_ID }}/damo-backend
          sudo docker image prune -f
          sudo docker-compose up -d
